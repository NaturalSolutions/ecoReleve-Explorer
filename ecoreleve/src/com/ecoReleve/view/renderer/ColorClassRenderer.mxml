<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true">
	
	<fx:Script>
		<![CDATA[
			import com.ecoReleve.model.VO.ClassColorVO;
			
			import spark.components.supportClasses.ListBase;
			
			private function changeColorHandler(event:Event):void
			{
				var oldValue:uint = fill.color;
				
				if (oldValue != myColorPickerFill.selectedColor)
				{
					data.color=myColorPickerFill.selectedColor
					fill.color = myColorPickerFill.selectedColor;
					
					//dispatch the data update event manually
					//var list:ListBase = this.owner as ListBase;
					//list.dataProvider.itemUpdated(data, 'color', oldValue, myColorPickerFill.selectedColor); 
				}
			}
		]]>
	</fx:Script>
	
	<s:states>		
		<s:State name="normal" />	
		<s:State name="hovered" />	
		<s:State name="selected" />	
		<s:State name="normalAndShowsCaret" />	
		<s:State name="hoveredAndShowsCaret" />	
		<s:State name="selectedAndShowsCaret" />		
	</s:states>
	
	<s:HGroup gap="10" paddingBottom="2" paddingLeft="2" paddingRight="2" paddingTop="2" width="100%">
		<s:Label text="{data.value.toString()}" width="160" fontWeight="bold" textAlign="left"/>
		<s:Rect width="20" height="20" includeIn="normal,normalAndShowsCaret">
			<s:fill>
				<s:SolidColor id="fill" color="{data.color}"/>
			</s:fill>
		</s:Rect>
		<mx:ColorPicker id="myColorPickerFill" selectedColor="{data.color}" change="changeColorHandler(event)" height="20" width="20" textAlign="right" includeIn="selected,selectedAndShowsCaret,hovered,hoveredAndShowsCaret"/>		
	</s:HGroup>
	
</s:ItemRenderer>
